-- ==================== WMS 메일 시스템 스키마 (Oracle 19c 전용) ====================
-- Production 환경 배포용
-- 메일 발송 기능 관련 테이블만 포함 (테스트 데이터 테이블 제외)


-- ==================== 기존 객체 삭제 (재설치 시) ====================
-- 이미 존재하지 않는 경우 오류를 무시하고 계속 진행

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MAIL_SEND_LOG PURGE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN RAISE; END IF;  -- ORA-00942: 테이블 또는 뷰가 존재하지 않습니다
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MAIL_QUEUE PURGE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN RAISE; END IF;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_MAIL_SEND_LOG';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -2289 THEN RAISE; END IF;  -- ORA-02289: 시퀀스가 존재하지 않습니다
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_MAIL_QUEUE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -2289 THEN RAISE; END IF;
END;
/


-- ==================== 시퀀스 생성 ====================
CREATE SEQUENCE SEQ_MAIL_SEND_LOG
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCACHE
    NOORDER;

CREATE SEQUENCE SEQ_MAIL_QUEUE
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCACHE
    NOORDER;


-- ==================== 1. 통합 메일 발송 로그 ====================
CREATE TABLE MAIL_SEND_LOG (
    LOG_ID          NUMBER          PRIMARY KEY,
    MAIL_TYPE       VARCHAR2(20)    NOT NULL CHECK (MAIL_TYPE IN ('ALARM', 'DIRECT', 'REPORT', 'NOTICE')),
    MAIL_SOURCE     VARCHAR2(100),
    SUBJECT         VARCHAR2(500)   NOT NULL,
    RECIPIENTS      CLOB            NOT NULL,
    CC_RECIPIENTS   CLOB,
    BODY_HTML       CLOB            NOT NULL,
    SEND_STATUS     VARCHAR2(20)    NOT NULL CHECK (SEND_STATUS IN ('PENDING', 'SUCCESS', 'FAILURE')),
    ERROR_MESSAGE   VARCHAR2(2000),
    RETRY_COUNT     NUMBER          DEFAULT 0,
    SEND_DATE       DATE,
    SENDER_EMAIL    VARCHAR2(200),
    IP_ADDRESS      VARCHAR2(50),
    REG_DATE        DATE            DEFAULT SYSDATE,
    UPD_DATE        DATE
);

-- 인덱스 생성
CREATE INDEX IDX_MAIL_LOG_DATE ON MAIL_SEND_LOG(SEND_DATE DESC);
CREATE INDEX IDX_MAIL_LOG_TYPE ON MAIL_SEND_LOG(MAIL_TYPE, SEND_STATUS);
CREATE INDEX IDX_MAIL_LOG_SOURCE ON MAIL_SEND_LOG(MAIL_SOURCE, SEND_DATE DESC);

-- 테이블 및 컬럼 코멘트
COMMENT ON TABLE MAIL_SEND_LOG IS '통합 메일 발송 이력';
COMMENT ON COLUMN MAIL_SEND_LOG.LOG_ID IS 'Primary Key (SEQ_MAIL_SEND_LOG.NEXTVAL)';
COMMENT ON COLUMN MAIL_SEND_LOG.MAIL_TYPE IS 'ALARM: 알람, DIRECT: 직접 발송, REPORT: 보고서, NOTICE: 공지';
COMMENT ON COLUMN MAIL_SEND_LOG.MAIL_SOURCE IS '알람 타입 식별자 (OVERDUE_ORDERS, LOW_STOCK 등)';
COMMENT ON COLUMN MAIL_SEND_LOG.SUBJECT IS '메일 제목';
COMMENT ON COLUMN MAIL_SEND_LOG.RECIPIENTS IS '수신인 (콤마 구분: user1@example.com,user2@example.com)';
COMMENT ON COLUMN MAIL_SEND_LOG.CC_RECIPIENTS IS '참조 수신인 (콤마 구분)';
COMMENT ON COLUMN MAIL_SEND_LOG.BODY_HTML IS 'HTML 형식 메일 본문';
COMMENT ON COLUMN MAIL_SEND_LOG.SEND_STATUS IS 'PENDING: 대기, SUCCESS: 성공, FAILURE: 실패';
COMMENT ON COLUMN MAIL_SEND_LOG.ERROR_MESSAGE IS '발송 실패 시 에러 메시지';
COMMENT ON COLUMN MAIL_SEND_LOG.RETRY_COUNT IS '재시도 횟수';
COMMENT ON COLUMN MAIL_SEND_LOG.SEND_DATE IS '실제 발송 완료 시각';
COMMENT ON COLUMN MAIL_SEND_LOG.SENDER_EMAIL IS '발신자 이메일 주소';
COMMENT ON COLUMN MAIL_SEND_LOG.IP_ADDRESS IS '발송 요청 IP 주소';
COMMENT ON COLUMN MAIL_SEND_LOG.REG_DATE IS '로그 등록 일시';
COMMENT ON COLUMN MAIL_SEND_LOG.UPD_DATE IS '로그 수정 일시';


-- ==================== 2. 메일 알람 큐 ====================
CREATE TABLE MAIL_QUEUE (
    QUEUE_ID            NUMBER          PRIMARY KEY,
    MAIL_SOURCE         VARCHAR2(100)   NOT NULL,
    ALARM_NAME          VARCHAR2(200)   NOT NULL,
    SEVERITY            VARCHAR2(20)    NOT NULL CHECK (SEVERITY IN ('INFO', 'WARNING', 'CRITICAL')),
    SQL_ID              VARCHAR2(200)   NOT NULL,
    SECTION_TITLE       VARCHAR2(500),
    SECTION_CONTENT     CLOB,
    RECIPIENT_USER_IDS  VARCHAR2(1000),
    RECIPIENT_GROUPS    VARCHAR2(1000),
    STATUS              VARCHAR2(20)    NOT NULL CHECK (STATUS IN ('PENDING', 'SUCCESS', 'FAILED')),
    RETRY_COUNT         NUMBER          DEFAULT 0,
    ERROR_MESSAGE       VARCHAR2(2000),
    REG_DATE            DATE            DEFAULT SYSDATE,
    UPD_DATE            DATE
);

-- 인덱스 생성
CREATE INDEX IDX_MAIL_QUEUE_STATUS ON MAIL_QUEUE(STATUS, REG_DATE);

-- 테이블 및 컬럼 코멘트
COMMENT ON TABLE MAIL_QUEUE IS '메일 알람 발송 큐 (Oracle Procedure가 INSERT, Spring Consumer가 처리)';
COMMENT ON COLUMN MAIL_QUEUE.QUEUE_ID IS 'Primary Key (SEQ_MAIL_QUEUE.NEXTVAL)';
COMMENT ON COLUMN MAIL_QUEUE.MAIL_SOURCE IS '알람 타입 식별자 (OVERDUE_ORDERS, LOW_STOCK 등)';
COMMENT ON COLUMN MAIL_QUEUE.ALARM_NAME IS '메일 제목에 사용될 알람 이름 (예: 지연 주문 알림)';
COMMENT ON COLUMN MAIL_QUEUE.SEVERITY IS '심각도 (INFO/WARNING/CRITICAL) - 아이콘 및 제목 prefix 결정';
COMMENT ON COLUMN MAIL_QUEUE.SQL_ID IS 'Consumer가 호출할 MyBatis SQL ID (예: alarm.selectOverdueOrdersDetail)';
COMMENT ON COLUMN MAIL_QUEUE.SECTION_TITLE IS '메일 본문 섹션 소제목';
COMMENT ON COLUMN MAIL_QUEUE.SECTION_CONTENT IS '메일 본문 섹션 내용 (TEXT)';
COMMENT ON COLUMN MAIL_QUEUE.RECIPIENT_USER_IDS IS '수신 사용자 ID (콤마 구분, NULL 가능, 예: USER001,USER002)';
COMMENT ON COLUMN MAIL_QUEUE.RECIPIENT_GROUPS IS '수신 그룹 (콤마 구분, NULL 가능, 둘 다 NULL이면 ADM 기본, 예: ADM,SALES)';
COMMENT ON COLUMN MAIL_QUEUE.STATUS IS 'PENDING: 대기, SUCCESS: 성공, FAILED: 실패';
COMMENT ON COLUMN MAIL_QUEUE.RETRY_COUNT IS '재시도 횟수 (최대 3회)';
COMMENT ON COLUMN MAIL_QUEUE.ERROR_MESSAGE IS '처리 실패 시 에러 메시지';
COMMENT ON COLUMN MAIL_QUEUE.REG_DATE IS '큐 등록 일시 (Procedure INSERT 시각)';
COMMENT ON COLUMN MAIL_QUEUE.UPD_DATE IS '큐 상태 변경 일시 (Consumer 처리 시각)';


-- ==================== 권한 부여 (필요 시 주석 해제) ====================
-- 실제 운영 환경의 애플리케이션 사용자 계정에 권한 부여
-- GRANT SELECT, INSERT, UPDATE, DELETE ON MAIL_SEND_LOG TO WMS_APP_USER;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON MAIL_QUEUE TO WMS_APP_USER;
-- GRANT SELECT ON SEQ_MAIL_SEND_LOG TO WMS_APP_USER;
-- GRANT SELECT ON SEQ_MAIL_QUEUE TO WMS_APP_USER;


-- ==================== 커밋 ====================
COMMIT;


-- ==================== 설치 완료 메시지 ====================
-- 설치 완료 후 아래 쿼리로 검증
-- SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME IN ('MAIL_SEND_LOG', 'MAIL_QUEUE');
-- SELECT SEQUENCE_NAME FROM USER_SEQUENCES WHERE SEQUENCE_NAME IN ('SEQ_MAIL_SEND_LOG', 'SEQ_MAIL_QUEUE');
